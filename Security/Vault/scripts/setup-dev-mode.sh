#!/bin/sh

#colors
RED='\e[0;31m'
GREEN='\e[0;32m'
YELLOW='\e[0;33m'
CYAN='\e[0;36m'
RESET='\e[0m'

set -e  																				# Arr√™ter le script en cas d'erreur

echo -e "\n\n${GREEN}üöÄ D√©marrage de Vault en mode Dev...${RESET}"

export VAULT_ADDR="http://127.0.0.1:8200"
export VAULT_API_ADDR="http://127.0.0.1:8200"
export root_token="root"																# REVIEW - Token root par d√©faut pour le mode dev

vault server -dev -dev-root-token-id=$root_token &										# D√©marrer Vault en arri√®re-plan (mode dev, sans TLS, avec un token root fixe)

echo -e "\n${YELLOW}‚è≥ Attente de la disponibilit√© de Vault...${RESET}"					# Attendre que Vault soit accessible
until curl -s $VAULT_ADDR/v1/sys/health | grep -E '"initialized":true|"standby":true' > /dev/null; do
	sleep 2
done
echo -e "${GREEN}‚úÖ Vault est maintenant disponible !${RESET}"

export VAULT_TOKEN=$root_token	# Define root token

###################
#     SQLITE
###################
if vault kv get secret/sqlite >/dev/null 2>&1; then										# V√©rifier si le secret SQLite existe d√©j√†
	echo -e "${YELLOW}‚ö†Ô∏è  Le secret SQLite existe d√©j√†. Pas besoin de l'√©craser.${RESET}"
else
	echo -e "\n${GREEN}üì¶ Ajout du secret SQLite...${RESET}"								# Ajouter le secret SQLite uniquement si absent
	vault kv put secret/sqlite username="fastify_user" password="secure_password"		# REVIEW - This is a test password
	echo -e "${GREEN}‚úÖ Secret SQLite ajout√© !${RESET}"
fi

###################
#      NGINX
###################
if vault kv get secret/nginx >/dev/null 2>&1; then										# V√©rifier si le secret Nginx existe d√©j√†
	echo -e "${YELLOW}‚ö†Ô∏è  Le secret Nginx existe d√©j√†. Pas besoin de l'√©craser.${RESET}"          
else
	echo -e "\n${GREEN}üì¶ Ajout du secret Nginx...${RESET}"								# Ajouter le secret Nginx uniquement si absent
	vault kv put secret/nginx username="panel" password="1234"							# REVIEW - This is a test password
	echo -e "${GREEN}‚úÖ Secret Nginx ajout√© !${RESET}"
fi

if ! command -v htpasswd > /dev/null; then												# V√©rifier si htpasswd est install√©
	echo -e "${RED}‚ùå La commande 'htpasswd' est requise. Installe apache2-utils ou httpd-tools.${RESET}"
	exit 1
fi

echo -e "\n${CYAN}üîê G√©n√©ration du fichier .htpasswd pour Nginx...${RESET}"				# Cr√©ation du fichier .htpasswd √† partir du secret Vault
nginx_user=$(vault kv get -field=username secret/nginx)									# R√©cup√©ration des infos depuis Vault
nginx_pass=$(vault kv get -field=password secret/nginx)
HTPASSWD_PATH="./nginx/.htpasswd"														# Dossier cible
mkdir -p "$(dirname "$HTPASSWD_PATH")"
htpasswd -cb "$HTPASSWD_PATH" "$nginx_user" "$nginx_pass"								# Cr√©ation du fichier .htpasswd avec le mot de passe chiffr√©
echo -e "${GREEN}‚úÖ Fichier .htpasswd g√©n√©r√© √† : $HTPASSWD_PATH${RESET}"


echo -e "\n${GREEN}‚úÖ Script termin√© avec succ√®s en mode Dev !${RESET}"