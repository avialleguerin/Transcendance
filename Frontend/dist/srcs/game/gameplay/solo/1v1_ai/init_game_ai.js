import { create_environment_view3, create_game, destroy_game } from "../../init_game.js";
import { init_players_and_ai } from "./init_player_and_ai.js";
import { loadScoreModel, destroy_score } from "../../score.js";
import { createBall, destroy_ball } from "../../ball.js";
let gameStart = false;
let ball = null;
let player_1, ai_player;
export async function init_game_ai(scene) {
    create_environment_view3(scene);
    create_game(scene);
    ({ player_1, ai_player } = init_players_and_ai(scene));
    ball = await createBall(scene).catch(error => {
        console.error(error);
        return null;
    });
    if (ball) {
        console.log("Balle chargÃ©e avec position :", ball.position);
    }
    loadScoreModel(0, "left", true);
    loadScoreModel(0, "right", false);
    return { player_1, ai_player, ball };
}
export function start_game_solo(scene) {
    gameStart = true;
}
// export async function destroy_game_solo(scene)
// {
//     destroy_all_by_metadata(scene, "isPlayerRepere");
//     destroy_all_by_metadata(scene, "isPlayer_paddle");
//     destroy_all_by_metadata(scene, "isPlayer");
//     destroy_environement_view3(scene);
//     destroy_game(scene);
//     destroy_ball(ball);
//     destroy_score();
// }
// function destroy_all_by_metadata(scene, metadataKey) {
// 	scene.meshes
// 		.filter(mesh => mesh.metadata && mesh.metadata[metadataKey])
// 		.forEach(mesh => mesh.dispose());
// }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdF9nYW1lX2FpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHVibGljL3NyY3MvZ2FtZS9nYW1lcGxheS9zb2xvLzF2MV9haS9pbml0X2dhbWVfYWkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHdCQUF3QixFQUFFLFdBQVcsRUFBRyxZQUFZLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUN6RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsY0FBYyxFQUFFLGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpELElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQztBQUN0QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7QUFDaEIsSUFBSSxRQUFRLEVBQUUsU0FBUyxDQUFDO0FBRXhCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsWUFBWSxDQUFDLEtBQUs7SUFDcEMsd0JBQXdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRW5CLENBQUMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEdBQUcsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUV2RCxJQUFJLEdBQUcsTUFBTSxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckIsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ1AsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQkFBK0IsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVELGNBQWMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hDLGNBQWMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRWxDLE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDO0FBQ3pDLENBQUM7QUFFRCxNQUFNLFVBQVUsZUFBZSxDQUFDLEtBQUs7SUFFakMsU0FBUyxHQUFHLElBQUksQ0FBQztBQUNyQixDQUFDO0FBRUQsaURBQWlEO0FBQ2pELElBQUk7QUFDSix3REFBd0Q7QUFDeEQseURBQXlEO0FBQ3pELGtEQUFrRDtBQUNsRCx5Q0FBeUM7QUFDekMsMkJBQTJCO0FBQzNCLDBCQUEwQjtBQUMxQix1QkFBdUI7QUFDdkIsSUFBSTtBQUVKLHlEQUF5RDtBQUN6RCxnQkFBZ0I7QUFDaEIsaUVBQWlFO0FBQ2pFLHNDQUFzQztBQUN0QyxJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlX2Vudmlyb25tZW50X3ZpZXczLCBjcmVhdGVfZ2FtZSAsIGRlc3Ryb3lfZ2FtZX0gZnJvbSBcIi4uLy4uL2luaXRfZ2FtZS5qc1wiO1xuaW1wb3J0IHsgaW5pdF9wbGF5ZXJzX2FuZF9haSB9IGZyb20gXCIuL2luaXRfcGxheWVyX2FuZF9haS5qc1wiO1xuaW1wb3J0IHsgbG9hZFNjb3JlTW9kZWwsIGRlc3Ryb3lfc2NvcmUgfSBmcm9tIFwiLi4vLi4vc2NvcmUuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUJhbGwsIGRlc3Ryb3lfYmFsbCB9IGZyb20gXCIuLi8uLi9iYWxsLmpzXCI7XG5cbmxldCBnYW1lU3RhcnQgPSBmYWxzZTtcbmxldCBiYWxsID0gbnVsbDtcbmxldCBwbGF5ZXJfMSwgYWlfcGxheWVyO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5pdF9nYW1lX2FpKHNjZW5lKSB7XG4gICAgY3JlYXRlX2Vudmlyb25tZW50X3ZpZXczKHNjZW5lKTtcbiAgICBjcmVhdGVfZ2FtZShzY2VuZSk7XG4gICAgXG4gICAgKHsgcGxheWVyXzEsIGFpX3BsYXllciB9ID0gaW5pdF9wbGF5ZXJzX2FuZF9haShzY2VuZSkpO1xuXG4gICAgYmFsbCA9IGF3YWl0IGNyZWF0ZUJhbGwoc2NlbmUpLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH0pO1xuXG4gICAgaWYgKGJhbGwpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJCYWxsZSBjaGFyZ8OpZSBhdmVjIHBvc2l0aW9uIDpcIiwgYmFsbC5wb3NpdGlvbik7XG4gICAgfVxuXG4gICAgbG9hZFNjb3JlTW9kZWwoMCwgXCJsZWZ0XCIsIHRydWUpO1xuICAgIGxvYWRTY29yZU1vZGVsKDAsIFwicmlnaHRcIiwgZmFsc2UpO1xuICAgIFxuICAgIHJldHVybiB7IHBsYXllcl8xLCBhaV9wbGF5ZXIsIGJhbGwgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0X2dhbWVfc29sbyhzY2VuZSlcbntcbiAgICBnYW1lU3RhcnQgPSB0cnVlO1xufVxuXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVzdHJveV9nYW1lX3NvbG8oc2NlbmUpXG4vLyB7XG4vLyAgICAgZGVzdHJveV9hbGxfYnlfbWV0YWRhdGEoc2NlbmUsIFwiaXNQbGF5ZXJSZXBlcmVcIik7XG4vLyAgICAgZGVzdHJveV9hbGxfYnlfbWV0YWRhdGEoc2NlbmUsIFwiaXNQbGF5ZXJfcGFkZGxlXCIpO1xuLy8gICAgIGRlc3Ryb3lfYWxsX2J5X21ldGFkYXRhKHNjZW5lLCBcImlzUGxheWVyXCIpO1xuLy8gICAgIGRlc3Ryb3lfZW52aXJvbmVtZW50X3ZpZXczKHNjZW5lKTtcbi8vICAgICBkZXN0cm95X2dhbWUoc2NlbmUpO1xuLy8gICAgIGRlc3Ryb3lfYmFsbChiYWxsKTtcbi8vICAgICBkZXN0cm95X3Njb3JlKCk7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGRlc3Ryb3lfYWxsX2J5X21ldGFkYXRhKHNjZW5lLCBtZXRhZGF0YUtleSkge1xuLy8gXHRzY2VuZS5tZXNoZXNcbi8vIFx0XHQuZmlsdGVyKG1lc2ggPT4gbWVzaC5tZXRhZGF0YSAmJiBtZXNoLm1ldGFkYXRhW21ldGFkYXRhS2V5XSlcbi8vIFx0XHQuZm9yRWFjaChtZXNoID0+IG1lc2guZGlzcG9zZSgpKTtcbi8vIH0iXX0=