import { create_environment_view3, create_game, destroy_game } from "../../init_game.js";
import { init_players } from "../../player.js";
import { loadScoreModel, destroy_score } from "../../score.js";
import { createBall, destroy_ball, init_ball } from "../../ball.js";
// import { destroy_environement_view3 } from "../../init_game.js";
import { init_game } from "../../init_game.js";
import { reset_player_position } from "../../player.js";
let gameStart = false;
let ball = null;
let player_1, player_2;
let is_init = false;
export async function init_game_solo(scene) {
    if (!is_init) {
        create_game(scene);
        ({ player_1, player_2 } = init_players(scene));
        ball = await createBall(scene).catch(error => {
            console.error(error);
            return null;
        });
        if (ball) {
            console.log("Balle chargÃ©e avec position :", ball.position);
        }
        loadScoreModel(0, "left", true);
        loadScoreModel(0, "right", false);
        is_init = true;
        return { player_1, player_2, ball };
    }
    else {
        already_init();
        reset_player_position(player_1, player_2);
        return { player_1, player_2, ball };
    }
}
export function start_game_solo(scene) {
    gameStart = true;
}
function already_init() {
    enable_all_by_metadata(scene, "isPlayerRepere");
    enable_all_by_metadata(scene, "isPlayer_paddle");
    enable_all_by_metadata(scene, "isPlayer");
    init_game(scene);
    init_ball(ball);
}
function enable_all_by_metadata(scene, metadataKey) {
    scene.meshes
        .filter(mesh => mesh.metadata && mesh.metadata[metadataKey])
        .forEach(mesh => mesh.setEnabled(true));
}
export async function destroy_game_solo(scene) {
    destroy_all_by_metadata(scene, "isPlayerRepere");
    destroy_all_by_metadata(scene, "isPlayer_paddle");
    destroy_all_by_metadata(scene, "isPlayer");
    destroy_game(scene);
    destroy_ball(ball);
    destroy_score();
}
function destroy_all_by_metadata(scene, metadataKey) {
    scene.meshes
        .filter(mesh => mesh.metadata && mesh.metadata[metadataKey])
        .forEach(mesh => mesh.setEnabled(false));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdF9nYW1lX1NvbG8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wdWJsaWMvc3Jjcy9nYW1lL2dhbWVwbGF5L3NvbG8vMXYxX3BsYXllci9pbml0X2dhbWVfU29sby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsV0FBVyxFQUFHLFlBQVksRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsY0FBYyxFQUFFLGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxtRUFBbUU7QUFDbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXhELElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQztBQUN0QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7QUFDaEIsSUFBSSxRQUFRLEVBQUUsUUFBUSxDQUFDO0FBQ3ZCLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQztBQUVwQixNQUFNLENBQUMsS0FBSyxVQUFVLGNBQWMsQ0FBQyxLQUFLO0lBQ3RDLElBQUksQ0FBQyxPQUFPLEVBQ1osQ0FBQztRQUNHLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVuQixDQUFDLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxHQUFHLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBRS9DLElBQUksR0FBRyxNQUFNLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDekMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNyQixPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FBQztRQUVILElBQUksSUFBSSxFQUFFLENBQUM7WUFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUErQixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoRSxDQUFDO1FBRUQsY0FBYyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEMsY0FBYyxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDbEMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUVmLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQ3hDLENBQUM7U0FFRCxDQUFDO1FBQ0csWUFBWSxFQUFFLENBQUM7UUFDZixxQkFBcUIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDMUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDeEMsQ0FBQztBQUVMLENBQUM7QUFFRCxNQUFNLFVBQVUsZUFBZSxDQUFDLEtBQUs7SUFFakMsU0FBUyxHQUFHLElBQUksQ0FBQztBQUNyQixDQUFDO0FBRUQsU0FBUyxZQUFZO0lBRWpCLHNCQUFzQixDQUFDLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ2hELHNCQUFzQixDQUFDLEtBQUssRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ2pELHNCQUFzQixDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztJQUMxQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakIsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3BCLENBQUM7QUFHRCxTQUFTLHNCQUFzQixDQUFDLEtBQUssRUFBRSxXQUFXO0lBQzlDLEtBQUssQ0FBQyxNQUFNO1NBQ1AsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQzNELE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUNoRCxDQUFDO0FBRUQsTUFBTSxDQUFDLEtBQUssVUFBVSxpQkFBaUIsQ0FBQyxLQUFLO0lBRXpDLHVCQUF1QixDQUFDLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ2pELHVCQUF1QixDQUFDLEtBQUssRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ2xELHVCQUF1QixDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztJQUMzQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEIsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25CLGFBQWEsRUFBRSxDQUFDO0FBQ3BCLENBQUM7QUFFRCxTQUFTLHVCQUF1QixDQUFDLEtBQUssRUFBRSxXQUFXO0lBQ2xELEtBQUssQ0FBQyxNQUFNO1NBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQzNELE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUMzQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlX2Vudmlyb25tZW50X3ZpZXczLCBjcmVhdGVfZ2FtZSAsIGRlc3Ryb3lfZ2FtZX0gZnJvbSBcIi4uLy4uL2luaXRfZ2FtZS5qc1wiO1xuaW1wb3J0IHsgaW5pdF9wbGF5ZXJzIH0gZnJvbSBcIi4uLy4uL3BsYXllci5qc1wiO1xuaW1wb3J0IHsgbG9hZFNjb3JlTW9kZWwsIGRlc3Ryb3lfc2NvcmUgfSBmcm9tIFwiLi4vLi4vc2NvcmUuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUJhbGwsIGRlc3Ryb3lfYmFsbCwgaW5pdF9iYWxsIH0gZnJvbSBcIi4uLy4uL2JhbGwuanNcIjtcbi8vIGltcG9ydCB7IGRlc3Ryb3lfZW52aXJvbmVtZW50X3ZpZXczIH0gZnJvbSBcIi4uLy4uL2luaXRfZ2FtZS5qc1wiO1xuaW1wb3J0IHsgaW5pdF9nYW1lIH0gZnJvbSBcIi4uLy4uL2luaXRfZ2FtZS5qc1wiO1xuaW1wb3J0IHsgcmVzZXRfcGxheWVyX3Bvc2l0aW9uIH0gZnJvbSBcIi4uLy4uL3BsYXllci5qc1wiO1xuXG5sZXQgZ2FtZVN0YXJ0ID0gZmFsc2U7XG5sZXQgYmFsbCA9IG51bGw7XG5sZXQgcGxheWVyXzEsIHBsYXllcl8yO1xubGV0IGlzX2luaXQgPSBmYWxzZTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluaXRfZ2FtZV9zb2xvKHNjZW5lKSB7XG4gICAgaWYgKCFpc19pbml0KVxuICAgIHtcbiAgICAgICAgY3JlYXRlX2dhbWUoc2NlbmUpO1xuICAgICAgICBcbiAgICAgICAgKHsgcGxheWVyXzEsIHBsYXllcl8yIH0gPSBpbml0X3BsYXllcnMoc2NlbmUpKTtcbiAgICBcbiAgICAgICAgYmFsbCA9IGF3YWl0IGNyZWF0ZUJhbGwoc2NlbmUpLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH0pO1xuICAgIFxuICAgICAgICBpZiAoYmFsbCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJCYWxsZSBjaGFyZ8OpZSBhdmVjIHBvc2l0aW9uIDpcIiwgYmFsbC5wb3NpdGlvbik7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgbG9hZFNjb3JlTW9kZWwoMCwgXCJsZWZ0XCIsIHRydWUpO1xuICAgICAgICBsb2FkU2NvcmVNb2RlbCgwLCBcInJpZ2h0XCIsIGZhbHNlKTtcbiAgICAgICAgaXNfaW5pdCA9IHRydWU7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4geyBwbGF5ZXJfMSwgcGxheWVyXzIsIGJhbGwgfTtcbiAgICB9XG4gICAgZWxzZVxuICAgIHtcbiAgICAgICAgYWxyZWFkeV9pbml0KCk7XG4gICAgICAgIHJlc2V0X3BsYXllcl9wb3NpdGlvbihwbGF5ZXJfMSwgcGxheWVyXzIpO1xuICAgICAgICByZXR1cm4geyBwbGF5ZXJfMSwgcGxheWVyXzIsIGJhbGwgfTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0X2dhbWVfc29sbyhzY2VuZSlcbntcbiAgICBnYW1lU3RhcnQgPSB0cnVlO1xufVxuXG5mdW5jdGlvbiBhbHJlYWR5X2luaXQoKVxue1xuICAgIGVuYWJsZV9hbGxfYnlfbWV0YWRhdGEoc2NlbmUsIFwiaXNQbGF5ZXJSZXBlcmVcIik7XG4gICAgZW5hYmxlX2FsbF9ieV9tZXRhZGF0YShzY2VuZSwgXCJpc1BsYXllcl9wYWRkbGVcIik7XG4gICAgZW5hYmxlX2FsbF9ieV9tZXRhZGF0YShzY2VuZSwgXCJpc1BsYXllclwiKTtcbiAgICBpbml0X2dhbWUoc2NlbmUpO1xuICAgIGluaXRfYmFsbChiYWxsKTtcbn1cblxuXG5mdW5jdGlvbiBlbmFibGVfYWxsX2J5X21ldGFkYXRhKHNjZW5lLCBtZXRhZGF0YUtleSkge1xuICAgIHNjZW5lLm1lc2hlc1xuICAgICAgICAuZmlsdGVyKG1lc2ggPT4gbWVzaC5tZXRhZGF0YSAmJiBtZXNoLm1ldGFkYXRhW21ldGFkYXRhS2V5XSlcbiAgICAgICAgLmZvckVhY2gobWVzaCA9PiBtZXNoLnNldEVuYWJsZWQodHJ1ZSkpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVzdHJveV9nYW1lX3NvbG8oc2NlbmUpXG57XG4gICAgZGVzdHJveV9hbGxfYnlfbWV0YWRhdGEoc2NlbmUsIFwiaXNQbGF5ZXJSZXBlcmVcIik7XG4gICAgZGVzdHJveV9hbGxfYnlfbWV0YWRhdGEoc2NlbmUsIFwiaXNQbGF5ZXJfcGFkZGxlXCIpO1xuICAgIGRlc3Ryb3lfYWxsX2J5X21ldGFkYXRhKHNjZW5lLCBcImlzUGxheWVyXCIpO1xuICAgIGRlc3Ryb3lfZ2FtZShzY2VuZSk7XG4gICAgZGVzdHJveV9iYWxsKGJhbGwpO1xuICAgIGRlc3Ryb3lfc2NvcmUoKTtcbn1cblxuZnVuY3Rpb24gZGVzdHJveV9hbGxfYnlfbWV0YWRhdGEoc2NlbmUsIG1ldGFkYXRhS2V5KSB7XG5cdHNjZW5lLm1lc2hlc1xuXHRcdC5maWx0ZXIobWVzaCA9PiBtZXNoLm1ldGFkYXRhICYmIG1lc2gubWV0YWRhdGFbbWV0YWRhdGFLZXldKVxuXHRcdC5mb3JFYWNoKG1lc2ggPT4gbWVzaC5zZXRFbmFibGVkKGZhbHNlKSk7XG59Il19