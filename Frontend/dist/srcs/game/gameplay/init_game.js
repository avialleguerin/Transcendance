import { getSoloGameStart, getMultiGameStart } from "./babylon.js";
export function create_game(scene) {
    const border_right = new BABYLON.MeshBuilder.CreateBox("border", {
        width: 65,
        height: 3,
        depth: 1
    }, scene);
    border_right.position = new BABYLON.Vector3(-7, 300, -14);
    border_right.visibility = 0;
    const border_left = new BABYLON.MeshBuilder.CreateBox("border", {
        width: 65,
        height: 3,
        depth: 1
    }, scene);
    border_left.position = new BABYLON.Vector3(-7, 300, -130);
    border_left.visibility = 0;
    const borderTop = new BABYLON.MeshBuilder.CreateBox("border", {
        width: 115,
        height: 3,
        depth: 1
    }, scene);
    borderTop.position = new BABYLON.Vector3(25, 300, -72);
    borderTop.rotation = new BABYLON.Vector3(0, Math.PI / 2, 0);
    borderTop.visibility = 0;
    const borderBottom = new BABYLON.MeshBuilder.CreateBox("border", {
        width: 115,
        height: 3,
        depth: 1
    }, scene);
    borderBottom.position = new BABYLON.Vector3(-40, 300, -72);
    borderBottom.rotation = new BABYLON.Vector3(0, Math.PI / 2, 0);
    borderBottom.visibility = 0;
    return { border_right, border_left, borderTop, borderBottom };
}
export function destroy_game(scene) {
    scene.meshes.forEach(m => {
        if (m.name === "border") {
            m.setEnabled(false);
        }
    });
}
export function init_game(scene) {
    scene.meshes.forEach(m => {
        if (m.name === "border") {
            m.setEnabled(true);
        }
    });
}
let view1Meshes = [];
let view2Meshes = [];
let view3Meshes = [];
// ========================= VIEW 1 =========================
export function create_environment_view1(scene) {
    // destroy_environement_view1();
    const grassTexture = new BABYLON.Texture("/srcs/game/assets/image/perfect-green-grass.jpg", scene);
    grassTexture.anisotropicFilteringLevel = 8;
    grassTexture.uScale = 5;
    grassTexture.vScale = 5;
    grassTexture.hasAlpha = false;
    grassTexture.wrapU = BABYLON.Texture.WRAP_ADDRESSMODE;
    grassTexture.wrapV = BABYLON.Texture.WRAP_ADDRESSMODE;
    const grassMaterial = new BABYLON.StandardMaterial("grassMaterial", scene);
    grassMaterial.diffuseTexture = grassTexture;
    grassMaterial.backFaceCulling = false;
    grassMaterial.specularColor = new BABYLON.Color3(0.1, 0.1, 0.1);
    BABYLON.SceneLoader.Append("/srcs/game/assets/3d_object/", "ImageToStl.com_football_stadiumv2.glb", scene, function () {
        const stadiumGroup = new BABYLON.TransformNode("stadiumGroup", scene);
        scene.meshes.forEach(m => {
            if (m.name.includes("__root__")) {
                m.parent = stadiumGroup;
            }
        });
        view1Meshes.push(stadiumGroup);
    });
    BABYLON.SceneLoader.ImportMesh("", "/srcs/game/assets/3d_object/", "testPersoPageDeGardeV1.glb", scene, function (newMeshes) {
        let perso = null;
        newMeshes.forEach(mesh => {
            if (mesh.material) {
                mesh.material.transparencyMode = 0;
                mesh.material.backFaceCulling = false;
            }
            if (mesh.name === "__root__") {
                perso = mesh;
            }
            view1Meshes.push(mesh);
        });
        if (perso) {
            perso.scaling = new BABYLON.Vector3(5.5, 5.5, 5.5);
            perso.position = new BABYLON.Vector3(-90, 1.5, -65);
            perso.rotation = new BABYLON.Vector3(0, Math.PI / 4, 0);
        }
        if (typeof controlPerso === "function") {
            controlPerso(perso);
        }
    });
    const positions = [
        [-61.5, 1.3, -152], [-61.5, 1.3, -102], [-61.5, 1.3, -52],
        [-106.5, 1.3, -152], [-106.5, 1.3, -102], [-106.5, 1.3, -52]
    ];
    positions.forEach((pos, i) => {
        const ground = BABYLON.MeshBuilder.CreateGround(`grass${i}`, { width: 45, height: 50 }, scene);
        ground.material = grassMaterial;
        ground.position = new BABYLON.Vector3(...pos);
        ground.freezeWorldMatrix();
        view1Meshes.push(ground);
    });
}
// ========================= VIEW 2 =========================
export function create_environment_view2(scene) {
    // destroy_environement_view2();
    BABYLON.SceneLoader.ImportMesh("", "/srcs/game/assets/3d_object/", "versionFinalV2.glb", scene, function (meshes) {
        const container = new BABYLON.TransformNode("container", scene);
        meshes.forEach(m => {
            m.setParent(container);
            view2Meshes.push(m);
        });
        container.position = new BABYLON.Vector3(0, 100, 0);
        view2Meshes.push(container);
    });
    const lights = [
        { name: "spotLight", pos: [-6, 101, -14], dir: [2.5, 4, -2] },
        { name: "spotLight2", pos: [-7.69, 101, -27], dir: [-7, 4, -2] },
    ];
    lights.forEach(({ name, pos, dir }) => {
        const light = new BABYLON.SpotLight(name, new BABYLON.Vector3(...pos), new BABYLON.Vector3(...dir), Math.PI, 4, scene);
        light.intensity = 10000;
        light.diffuse = light.specular = new BABYLON.Color3(1, 1, 1);
        light.range = 30;
        view2Meshes.push(light);
    });
    BABYLON.SceneLoader.ImportMesh("", "/srcs/game/assets/3d_object/", "arcade_machineV2.glb", scene, function (meshes) {
        const container = new BABYLON.TransformNode("arcade_machineV2", scene);
        meshes.forEach(m => {
            m.setParent(container);
            view2Meshes.push(m);
        });
        container.position = new BABYLON.Vector3(-4, 104, -3);
        container.rotation = new BABYLON.Vector3(0, Math.PI, 0);
        container.scaling = new BABYLON.Vector3(-4, 4, -4.7);
        view2Meshes.push(container);
    });
}
// ========================= VIEW 3 =========================
export function create_environment_view3(scene) {
    view3Meshes = [];
    const grassMaterial = new BABYLON.StandardMaterial("grassMaterial", scene);
    const texture = new BABYLON.Texture("/srcs/game/assets/image/perfect-green-grass.jpg", scene);
    texture.anisotropicFilteringLevel = 8;
    texture.uScale = 5;
    texture.vScale = 5;
    grassMaterial.diffuseTexture = texture;
    grassMaterial.backFaceCulling = false;
    grassMaterial.specularColor = new BABYLON.Color3(0.1, 0.1, 0.1);
    BABYLON.SceneLoader.ImportMesh("", "/srcs/game/assets/3d_object/", "ImageToStl.com_footballterraindejeuxv2.glb", scene, function (meshes) {
        const container = new BABYLON.TransformNode("terrainContainer", scene);
        meshes.forEach(m => {
            m.setParent(container);
            view3Meshes.push(m);
        });
        container.position = new BABYLON.Vector3(0, 300, 0);
        view3Meshes.push(container);
    });
    const grassPositions = [
        [-23.6, 299.8, -102], [-23.6, 299.8, -44],
        [9.2, 299.8, -102], [9.2, 299.8, -44]
    ];
    grassPositions.forEach((pos, i) => {
        const ground = BABYLON.MeshBuilder.CreateGround(`g${i}`, { width: 32.8, height: 58 }, scene);
        ground.material = grassMaterial.clone(`grassMat${i}`);
        ground.material.diffuseTexture = texture.clone(`tex${i}`);
        ground.material.diffuseTexture.uScale = 5;
        ground.material.diffuseTexture.vScale = 5;
        ground.position = new BABYLON.Vector3(...pos);
        view3Meshes.push(ground);
    });
    if (getSoloGameStart())
        create_podium(scene, 5, 5, 5);
    if (getMultiGameStart())
        create_podium(scene, 8, 5, 8);
    [[-57, -65], [-57, -45], [27, -120], [-42, -120], [27, -24], [-42, -24]].forEach(([x, z]) => {
        create_spot_particule(scene, x, 299.5, z);
    });
}
function create_podium(scene, sx, sy, sz) {
    BABYLON.SceneLoader.ImportMesh("", "/srcs/game/assets/3d_object/", "podium.glb", scene, function (meshes) {
        const container = new BABYLON.TransformNode("podiumContainer", scene);
        meshes.forEach(m => {
            m.setParent(container);
            view3Meshes.push(m);
        });
        container.position = new BABYLON.Vector3(-57, 302, -55);
        container.scaling = new BABYLON.Vector3(sx, sy, sz);
        container.rotation = new BABYLON.Vector3(0, Math.PI, 0);
        view3Meshes.push(container);
    });
}
function create_spot_particule(scene, x, y, z) {
    BABYLON.SceneLoader.ImportMesh("", "/srcs/game/assets/3d_object/", "spot_particule.glb", scene, function (meshes) {
        const container = new BABYLON.TransformNode("spotContainer", scene);
        meshes.forEach(m => {
            m.setParent(container);
            view3Meshes.push(m);
        });
        container.position = new BABYLON.Vector3(x, y, z);
        view3Meshes.push(container);
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdF9nYW1lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHVibGljL3NyY3MvZ2FtZS9nYW1lcGxheS9pbml0X2dhbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRW5FLE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBSztJQUVoQyxNQUFNLFlBQVksR0FBRyxJQUFJLE9BQU8sQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRTtRQUNoRSxLQUFLLEVBQUUsRUFBRTtRQUNULE1BQU0sRUFBRSxDQUFDO1FBQ1QsS0FBSyxFQUFFLENBQUM7S0FDUixFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ1YsWUFBWSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDMUQsWUFBWSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7SUFFNUIsTUFBTSxXQUFXLEdBQUcsSUFBSSxPQUFPLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUU7UUFDL0QsS0FBSyxFQUFFLEVBQUU7UUFDVCxNQUFNLEVBQUUsQ0FBQztRQUNULEtBQUssRUFBRSxDQUFDO0tBQ1IsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNWLFdBQVcsQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzFELFdBQVcsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBRTNCLE1BQU0sU0FBUyxHQUFHLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFO1FBQzdELEtBQUssRUFBRSxHQUFHO1FBQ1YsTUFBTSxFQUFFLENBQUM7UUFD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QW9CLEVBQUUsS0FBSyxFQUFFLFVBQVUsTUFBTTtRQUMvRyxNQUFNLFNBQVMsR0FBRyxJQUFJLE9BQU8sQ0FBQyxhQUFhLENBQUMsZUFBZSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3BFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDbEIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUN2QixXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsU0FBUyxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNsRCxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzdCLENBQUMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNvbG9HYW1lU3RhcnQsIGdldE11bHRpR2FtZVN0YXJ0IH0gZnJvbSBcIi4vYmFieWxvbi5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlX2dhbWUoc2NlbmUpXG57XG5cdGNvbnN0IGJvcmRlcl9yaWdodCA9IG5ldyBCQUJZTE9OLk1lc2hCdWlsZGVyLkNyZWF0ZUJveChcImJvcmRlclwiLCB7XG5cdFx0d2lkdGg6IDY1LFxuXHRcdGhlaWdodDogMyxcblx0XHRkZXB0aDogMVxuXHR9LCBzY2VuZSk7XG5cdGJvcmRlcl9yaWdodC5wb3NpdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoLTcsIDMwMCwgLTE0KTtcblx0Ym9yZGVyX3JpZ2h0LnZpc2liaWxpdHkgPSAwO1xuXG5cdGNvbnN0IGJvcmRlcl9sZWZ0ID0gbmV3IEJBQllMT04uTWVzaEJ1aWxkZXIuQ3JlYXRlQm94KFwiYm9yZGVyXCIsIHtcblx0XHR3aWR0aDogNjUsXG5cdFx0aGVpZ2h0OiAzLFxuXHRcdGRlcHRoOiAxXG5cdH0sIHNjZW5lKTtcblx0Ym9yZGVyX2xlZnQucG9zaXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKC03LCAzMDAsIC0xMzApO1xuXHRib3JkZXJfbGVmdC52aXNpYmlsaXR5ID0gMDtcblxuXHRjb25zdCBib3JkZXJUb3AgPSBuZXcgQkFCWUxPTi5NZXNoQnVpbGRlci5DcmVhdGVCb3goXCJib3JkZXJcIiwge1xuXHRcdHdpZHRoOiAxMTUsXG5cdFx0aGVpZ2h0OiAzLFxuXHRcdGRlcHRoOiAxXG5cdH0sIHNjZW5lKTtcblx0Ym9yZGVyVG9wLnBvc2l0aW9uID0gbmV3IEJBQllMT04uVmVjdG9yMygyNSwgMzAwLCAtNzIpO1xuXHRib3JkZXJUb3Aucm90YXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKDAsIE1hdGguUEkvMiwgMCk7XG5cdGJvcmRlclRvcC52aXNpYmlsaXR5ID0gMDtcblxuXHRjb25zdCBib3JkZXJCb3R0b20gPSBuZXcgQkFCWUxPTi5NZXNoQnVpbGRlci5DcmVhdGVCb3goXCJib3JkZXJcIiwge1xuXHRcdHdpZHRoOiAxMTUsXG5cdFx0aGVpZ2h0OiAzLFxuXHRcdGRlcHRoOiAxXG5cdH0sIHNjZW5lKTtcblx0Ym9yZGVyQm90dG9tLnBvc2l0aW9uID0gbmV3IEJBQllMT04uVmVjdG9yMygtNDAsIDMwMCwgLTcyKTtcblx0Ym9yZGVyQm90dG9tLnJvdGF0aW9uID0gbmV3IEJBQllMT04uVmVjdG9yMygwLCBNYXRoLlBJLzIsIDApO1xuXHRib3JkZXJCb3R0b20udmlzaWJpbGl0eSA9IDA7XG5cblx0cmV0dXJuIHsgYm9yZGVyX3JpZ2h0LCBib3JkZXJfbGVmdCwgYm9yZGVyVG9wLCBib3JkZXJCb3R0b20gfTtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gZGVzdHJveV9nYW1lKHNjZW5lKVxue1xuXHRzY2VuZS5tZXNoZXMuZm9yRWFjaChtID0+IHtcblx0XHRpZiAobS5uYW1lID09PSBcImJvcmRlclwiKVxuXHRcdHtcblx0XHRcdG0uc2V0RW5hYmxlZChmYWxzZSk7XG5cdFx0fVxuXHR9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRfZ2FtZShzY2VuZSlcbntcblx0c2NlbmUubWVzaGVzLmZvckVhY2gobSA9PiB7XG5cdFx0aWYgKG0ubmFtZSA9PT0gXCJib3JkZXJcIilcblx0XHR7XG5cdFx0XHRtLnNldEVuYWJsZWQodHJ1ZSk7XG5cdFx0fVxuXHR9KTtcbn1cblxubGV0IHZpZXcxTWVzaGVzID0gW107XG5sZXQgdmlldzJNZXNoZXMgPSBbXTtcbmxldCB2aWV3M01lc2hlcyA9IFtdO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09IFZJRVcgMSA9PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVfZW52aXJvbm1lbnRfdmlldzEoc2NlbmUpIHtcblx0Ly8gZGVzdHJveV9lbnZpcm9uZW1lbnRfdmlldzEoKTtcblxuXHRjb25zdCBncmFzc1RleHR1cmUgPSBuZXcgQkFCWUxPTi5UZXh0dXJlKFwiL3NyY3MvZ2FtZS9hc3NldHMvaW1hZ2UvcGVyZmVjdC1ncmVlbi1ncmFzcy5qcGdcIiwgc2NlbmUpO1xuXHRncmFzc1RleHR1cmUuYW5pc290cm9waWNGaWx0ZXJpbmdMZXZlbCA9IDg7XG5cdGdyYXNzVGV4dHVyZS51U2NhbGUgPSA1O1xuXHRncmFzc1RleHR1cmUudlNjYWxlID0gNTtcblx0Z3Jhc3NUZXh0dXJlLmhhc0FscGhhID0gZmFsc2U7XG5cdGdyYXNzVGV4dHVyZS53cmFwVSA9IEJBQllMT04uVGV4dHVyZS5XUkFQX0FERFJFU1NNT0RFO1xuXHRncmFzc1RleHR1cmUud3JhcFYgPSBCQUJZTE9OLlRleHR1cmUuV1JBUF9BRERSRVNTTU9ERTtcblxuXHRjb25zdCBncmFzc01hdGVyaWFsID0gbmV3IEJBQllMT04uU3RhbmRhcmRNYXRlcmlhbChcImdyYXNzTWF0ZXJpYWxcIiwgc2NlbmUpO1xuXHRncmFzc01hdGVyaWFsLmRpZmZ1c2VUZXh0dXJlID0gZ3Jhc3NUZXh0dXJlO1xuXHRncmFzc01hdGVyaWFsLmJhY2tGYWNlQ3VsbGluZyA9IGZhbHNlO1xuXHRncmFzc01hdGVyaWFsLnNwZWN1bGFyQ29sb3IgPSBuZXcgQkFCWUxPTi5Db2xvcjMoMC4xLCAwLjEsIDAuMSk7XG5cblx0QkFCWUxPTi5TY2VuZUxvYWRlci5BcHBlbmQoXCIvc3Jjcy9nYW1lL2Fzc2V0cy8zZF9vYmplY3QvXCIsIFwiSW1hZ2VUb1N0bC5jb21fZm9vdGJhbGxfc3RhZGl1bXYyLmdsYlwiLCBzY2VuZSwgZnVuY3Rpb24gKCkge1xuXHRcdGNvbnN0IHN0YWRpdW1Hcm91cCA9IG5ldyBCQUJZTE9OLlRyYW5zZm9ybU5vZGUoXCJzdGFkaXVtR3JvdXBcIiwgc2NlbmUpO1xuXHRcdHNjZW5lLm1lc2hlcy5mb3JFYWNoKG0gPT4ge1xuXHRcdFx0aWYgKG0ubmFtZS5pbmNsdWRlcyhcIl9fcm9vdF9fXCIpKSB7XG5cdFx0XHRcdG0ucGFyZW50ID0gc3RhZGl1bUdyb3VwO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdHZpZXcxTWVzaGVzLnB1c2goc3RhZGl1bUdyb3VwKTtcblx0fSk7XG5cblx0QkFCWUxPTi5TY2VuZUxvYWRlci5JbXBvcnRNZXNoKFwiXCIsIFwiL3NyY3MvZ2FtZS9hc3NldHMvM2Rfb2JqZWN0L1wiLCBcInRlc3RQZXJzb1BhZ2VEZUdhcmRlVjEuZ2xiXCIsIHNjZW5lLCBmdW5jdGlvbiAobmV3TWVzaGVzKSB7XG5cdFx0bGV0IHBlcnNvID0gbnVsbDtcblx0XHRuZXdNZXNoZXMuZm9yRWFjaChtZXNoID0+IHtcblx0XHRcdGlmIChtZXNoLm1hdGVyaWFsKSB7XG5cdFx0XHRcdG1lc2gubWF0ZXJpYWwudHJhbnNwYXJlbmN5TW9kZSA9IDA7XG5cdFx0XHRcdG1lc2gubWF0ZXJpYWwuYmFja0ZhY2VDdWxsaW5nID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHRpZiAobWVzaC5uYW1lID09PSBcIl9fcm9vdF9fXCIpIHtcblx0XHRcdFx0cGVyc28gPSBtZXNoO1xuXHRcdFx0fVxuXHRcdFx0dmlldzFNZXNoZXMucHVzaChtZXNoKTtcblx0XHR9KTtcblxuXHRcdGlmIChwZXJzbykge1xuXHRcdFx0cGVyc28uc2NhbGluZyA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoNS41LCA1LjUsIDUuNSk7XG5cdFx0XHRwZXJzby5wb3NpdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoLTkwLCAxLjUsIC02NSk7XG5cdFx0XHRwZXJzby5yb3RhdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoMCwgTWF0aC5QSSAvIDQsIDApO1xuXHRcdH1cblxuXHRcdGlmICh0eXBlb2YgY29udHJvbFBlcnNvID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdGNvbnRyb2xQZXJzbyhwZXJzbyk7XG5cdFx0fVxuXHR9KTtcblxuXHRjb25zdCBwb3NpdGlvbnMgPSBbXG5cdFx0Wy02MS41LCAxLjMsIC0xNTJdLCBbLTYxLjUsIDEuMywgLTEwMl0sIFstNjEuNSwgMS4zLCAtNTJdLFxuXHRcdFstMTA2LjUsIDEuMywgLTE1Ml0sIFstMTA2LjUsIDEuMywgLTEwMl0sIFstMTA2LjUsIDEuMywgLTUyXVxuXHRdO1xuXG5cdHBvc2l0aW9ucy5mb3JFYWNoKChwb3MsIGkpID0+IHtcblx0XHRjb25zdCBncm91bmQgPSBCQUJZTE9OLk1lc2hCdWlsZGVyLkNyZWF0ZUdyb3VuZChgZ3Jhc3Mke2l9YCwgeyB3aWR0aDogNDUsIGhlaWdodDogNTAgfSwgc2NlbmUpO1xuXHRcdGdyb3VuZC5tYXRlcmlhbCA9IGdyYXNzTWF0ZXJpYWw7XG5cdFx0Z3JvdW5kLnBvc2l0aW9uID0gbmV3IEJBQllMT04uVmVjdG9yMyguLi5wb3MpO1xuXHRcdGdyb3VuZC5mcmVlemVXb3JsZE1hdHJpeCgpO1xuXHRcdHZpZXcxTWVzaGVzLnB1c2goZ3JvdW5kKTtcblx0fSk7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT0gVklFVyAyID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZV9lbnZpcm9ubWVudF92aWV3MihzY2VuZSkge1xuXHQvLyBkZXN0cm95X2Vudmlyb25lbWVudF92aWV3MigpO1xuXG5cdEJBQllMT04uU2NlbmVMb2FkZXIuSW1wb3J0TWVzaChcIlwiLCBcIi9zcmNzL2dhbWUvYXNzZXRzLzNkX29iamVjdC9cIiwgXCJ2ZXJzaW9uRmluYWxWMi5nbGJcIiwgc2NlbmUsIGZ1bmN0aW9uIChtZXNoZXMpIHtcblx0XHRjb25zdCBjb250YWluZXIgPSBuZXcgQkFCWUxPTi5UcmFuc2Zvcm1Ob2RlKFwiY29udGFpbmVyXCIsIHNjZW5lKTtcblx0XHRtZXNoZXMuZm9yRWFjaChtID0+IHtcblx0XHRcdG0uc2V0UGFyZW50KGNvbnRhaW5lcik7XG5cdFx0XHR2aWV3Mk1lc2hlcy5wdXNoKG0pO1xuXHRcdH0pO1xuXHRcdGNvbnRhaW5lci5wb3NpdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoMCwgMTAwLCAwKTtcblx0XHR2aWV3Mk1lc2hlcy5wdXNoKGNvbnRhaW5lcik7XG5cdH0pO1xuXG5cdGNvbnN0IGxpZ2h0cyA9IFtcblx0XHR7IG5hbWU6IFwic3BvdExpZ2h0XCIsIHBvczogWy02LCAxMDEsIC0xNF0sIGRpcjogWzIuNSwgNCwgLTJdIH0sXG5cdFx0eyBuYW1lOiBcInNwb3RMaWdodDJcIiwgcG9zOiBbLTcuNjksIDEwMSwgLTI3XSwgZGlyOiBbLTcsIDQsIC0yXSB9LFxuXHRdO1xuXG5cdGxpZ2h0cy5mb3JFYWNoKCh7IG5hbWUsIHBvcywgZGlyIH0pID0+IHtcblx0XHRjb25zdCBsaWdodCA9IG5ldyBCQUJZTE9OLlNwb3RMaWdodChuYW1lLCBuZXcgQkFCWUxPTi5WZWN0b3IzKC4uLnBvcyksIG5ldyBCQUJZTE9OLlZlY3RvcjMoLi4uZGlyKSwgTWF0aC5QSSwgNCwgc2NlbmUpO1xuXHRcdGxpZ2h0LmludGVuc2l0eSA9IDEwMDAwO1xuXHRcdGxpZ2h0LmRpZmZ1c2UgPSBsaWdodC5zcGVjdWxhciA9IG5ldyBCQUJZTE9OLkNvbG9yMygxLCAxLCAxKTtcblx0XHRsaWdodC5yYW5nZSA9IDMwO1xuXHRcdHZpZXcyTWVzaGVzLnB1c2gobGlnaHQpO1xuXHR9KTtcblxuXHRCQUJZTE9OLlNjZW5lTG9hZGVyLkltcG9ydE1lc2goXCJcIiwgXCIvc3Jjcy9nYW1lL2Fzc2V0cy8zZF9vYmplY3QvXCIsIFwiYXJjYWRlX21hY2hpbmVWMi5nbGJcIiwgc2NlbmUsIGZ1bmN0aW9uIChtZXNoZXMpIHtcblx0XHRjb25zdCBjb250YWluZXIgPSBuZXcgQkFCWUxPTi5UcmFuc2Zvcm1Ob2RlKFwiYXJjYWRlX21hY2hpbmVWMlwiLCBzY2VuZSk7XG5cdFx0bWVzaGVzLmZvckVhY2gobSA9PiB7XG5cdFx0XHRtLnNldFBhcmVudChjb250YWluZXIpO1xuXHRcdFx0dmlldzJNZXNoZXMucHVzaChtKTtcblx0XHR9KTtcblx0XHRjb250YWluZXIucG9zaXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKC00LCAxMDQsIC0zKTtcblx0XHRjb250YWluZXIucm90YXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKDAsIE1hdGguUEksIDApO1xuXHRcdGNvbnRhaW5lci5zY2FsaW5nID0gbmV3IEJBQllMT04uVmVjdG9yMygtNCwgNCwgLTQuNyk7XG5cdFx0dmlldzJNZXNoZXMucHVzaChjb250YWluZXIpO1xuXHR9KTtcblxufVxuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT0gVklFVyAzID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZV9lbnZpcm9ubWVudF92aWV3MyhzY2VuZSkge1xuXHR2aWV3M01lc2hlcyA9IFtdO1xuXG5cdGNvbnN0IGdyYXNzTWF0ZXJpYWwgPSBuZXcgQkFCWUxPTi5TdGFuZGFyZE1hdGVyaWFsKFwiZ3Jhc3NNYXRlcmlhbFwiLCBzY2VuZSk7XG5cdGNvbnN0IHRleHR1cmUgPSBuZXcgQkFCWUxPTi5UZXh0dXJlKFwiL3NyY3MvZ2FtZS9hc3NldHMvaW1hZ2UvcGVyZmVjdC1ncmVlbi1ncmFzcy5qcGdcIiwgc2NlbmUpO1xuXHR0ZXh0dXJlLmFuaXNvdHJvcGljRmlsdGVyaW5nTGV2ZWwgPSA4O1xuXHR0ZXh0dXJlLnVTY2FsZSA9IDU7XG5cdHRleHR1cmUudlNjYWxlID0gNTtcblx0Z3Jhc3NNYXRlcmlhbC5kaWZmdXNlVGV4dHVyZSA9IHRleHR1cmU7XG5cdGdyYXNzTWF0ZXJpYWwuYmFja0ZhY2VDdWxsaW5nID0gZmFsc2U7XG5cdGdyYXNzTWF0ZXJpYWwuc3BlY3VsYXJDb2xvciA9IG5ldyBCQUJZTE9OLkNvbG9yMygwLjEsIDAuMSwgMC4xKTtcblxuXHRCQUJZTE9OLlNjZW5lTG9hZGVyLkltcG9ydE1lc2goXCJcIiwgXCIvc3Jjcy9nYW1lL2Fzc2V0cy8zZF9vYmplY3QvXCIsIFwiSW1hZ2VUb1N0bC5jb21fZm9vdGJhbGx0ZXJyYWluZGVqZXV4djIuZ2xiXCIsIHNjZW5lLCBmdW5jdGlvbiAobWVzaGVzKSB7XG5cdFx0Y29uc3QgY29udGFpbmVyID0gbmV3IEJBQllMT04uVHJhbnNmb3JtTm9kZShcInRlcnJhaW5Db250YWluZXJcIiwgc2NlbmUpO1xuXHRcdG1lc2hlcy5mb3JFYWNoKG0gPT4ge1xuXHRcdFx0bS5zZXRQYXJlbnQoY29udGFpbmVyKTtcblx0XHRcdHZpZXczTWVzaGVzLnB1c2gobSk7XG5cdFx0fSk7XG5cdFx0Y29udGFpbmVyLnBvc2l0aW9uID0gbmV3IEJBQllMT04uVmVjdG9yMygwLCAzMDAsIDApO1xuXHRcdHZpZXczTWVzaGVzLnB1c2goY29udGFpbmVyKTtcblx0fSk7XG5cblx0Y29uc3QgZ3Jhc3NQb3NpdGlvbnMgPSBbXG5cdFx0Wy0yMy42LCAyOTkuOCwgLTEwMl0sIFstMjMuNiwgMjk5LjgsIC00NF0sXG5cdFx0WzkuMiwgMjk5LjgsIC0xMDJdLCBbOS4yLCAyOTkuOCwgLTQ0XVxuXHRdO1xuXG5cdGdyYXNzUG9zaXRpb25zLmZvckVhY2goKHBvcywgaSkgPT4ge1xuXHRcdGNvbnN0IGdyb3VuZCA9IEJBQllMT04uTWVzaEJ1aWxkZXIuQ3JlYXRlR3JvdW5kKGBnJHtpfWAsIHsgd2lkdGg6IDMyLjgsIGhlaWdodDogNTggfSwgc2NlbmUpO1xuXHRcdGdyb3VuZC5tYXRlcmlhbCA9IGdyYXNzTWF0ZXJpYWwuY2xvbmUoYGdyYXNzTWF0JHtpfWApO1xuXHRcdGdyb3VuZC5tYXRlcmlhbC5kaWZmdXNlVGV4dHVyZSA9IHRleHR1cmUuY2xvbmUoYHRleCR7aX1gKTtcblx0XHRncm91bmQubWF0ZXJpYWwuZGlmZnVzZVRleHR1cmUudVNjYWxlID0gNTtcblx0XHRncm91bmQubWF0ZXJpYWwuZGlmZnVzZVRleHR1cmUudlNjYWxlID0gNTtcblx0XHRncm91bmQucG9zaXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKC4uLnBvcyk7XG5cdFx0dmlldzNNZXNoZXMucHVzaChncm91bmQpO1xuXHR9KTtcblxuXHRpZiAoZ2V0U29sb0dhbWVTdGFydCgpKSBjcmVhdGVfcG9kaXVtKHNjZW5lLCA1LCA1LCA1KTtcblx0aWYgKGdldE11bHRpR2FtZVN0YXJ0KCkpIGNyZWF0ZV9wb2RpdW0oc2NlbmUsIDgsIDUsIDgpO1xuXG5cdFtbLTU3LCAtNjVdLCBbLTU3LCAtNDVdLCBbMjcsIC0xMjBdLCBbLTQyLCAtMTIwXSwgWzI3LCAtMjRdLCBbLTQyLCAtMjRdXS5mb3JFYWNoKChbeCwgel0pID0+IHtcblx0XHRjcmVhdGVfc3BvdF9wYXJ0aWN1bGUoc2NlbmUsIHgsIDI5OS41LCB6KTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZV9wb2RpdW0oc2NlbmUsIHN4LCBzeSwgc3opIHtcblx0QkFCWUxPTi5TY2VuZUxvYWRlci5JbXBvcnRNZXNoKFwiXCIsIFwiL3NyY3MvZ2FtZS9hc3NldHMvM2Rfb2JqZWN0L1wiLCBcInBvZGl1bS5nbGJcIiwgc2NlbmUsIGZ1bmN0aW9uIChtZXNoZXMpIHtcblx0XHRjb25zdCBjb250YWluZXIgPSBuZXcgQkFCWUxPTi5UcmFuc2Zvcm1Ob2RlKFwicG9kaXVtQ29udGFpbmVyXCIsIHNjZW5lKTtcblx0XHRtZXNoZXMuZm9yRWFjaChtID0+IHtcblx0XHRcdG0uc2V0UGFyZW50KGNvbnRhaW5lcik7XG5cdFx0XHR2aWV3M01lc2hlcy5wdXNoKG0pO1xuXHRcdH0pO1xuXHRcdGNvbnRhaW5lci5wb3NpdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoLTU3LCAzMDIsIC01NSk7XG5cdFx0Y29udGFpbmVyLnNjYWxpbmcgPSBuZXcgQkFCWUxPTi5WZWN0b3IzKHN4LCBzeSwgc3opO1xuXHRcdGNvbnRhaW5lci5yb3RhdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoMCwgTWF0aC5QSSwgMCk7XG5cdFx0dmlldzNNZXNoZXMucHVzaChjb250YWluZXIpO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlX3Nwb3RfcGFydGljdWxlKHNjZW5lLCB4LCB5LCB6KSB7XG5cdEJBQllMT04uU2NlbmVMb2FkZXIuSW1wb3J0TWVzaChcIlwiLCBcIi9zcmNzL2dhbWUvYXNzZXRzLzNkX29iamVjdC9cIiwgXCJzcG90X3BhcnRpY3VsZS5nbGJcIiwgc2NlbmUsIGZ1bmN0aW9uIChtZXNoZXMpIHtcblx0XHRjb25zdCBjb250YWluZXIgPSBuZXcgQkFCWUxPTi5UcmFuc2Zvcm1Ob2RlKFwic3BvdENvbnRhaW5lclwiLCBzY2VuZSk7XG5cdFx0bWVzaGVzLmZvckVhY2gobSA9PiB7XG5cdFx0XHRtLnNldFBhcmVudChjb250YWluZXIpO1xuXHRcdFx0dmlldzNNZXNoZXMucHVzaChtKTtcblx0XHR9KTtcblx0XHRjb250YWluZXIucG9zaXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKHgsIHksIHopO1xuXHRcdHZpZXczTWVzaGVzLnB1c2goY29udGFpbmVyKTtcblx0fSk7XG59XG4iXX0=