let nb_powerUP_freeze_Team_player1_2 = 0;
let nb_powerUP_freeze_Team_player3_4 = 0;
export function init_powerUP_freeze_Team_player(number) {
    nb_powerUP_freeze_Team_player1_2 = number;
    nb_powerUP_freeze_Team_player3_4 = number;
}
export function reset_powerUP_freeze_Team_player() {
    nb_powerUP_freeze_Team_player1_2 = 0;
    nb_powerUP_freeze_Team_player3_4 = 0;
}
let isfreeze_team1 = false;
let isfreeze_team2 = false;
let canUsePowerUP_freeze_team1 = true;
let canUsePowerUP_freeze_team2 = true;
export function activateFreezeTeam1() {
    if (nb_powerUP_freeze_Team_player3_4 > 0 && canUsePowerUP_freeze_team1) {
        nb_powerUP_freeze_Team_player3_4--;
        isfreeze_team1 = true;
        canUsePowerUP_freeze_team1 = false;
        console.log("Freeze activé pour l'équipe 1");
        setTimeout(() => {
            isfreeze_team1 = false;
            console.log("Freeze terminé pour l'équipe 1");
        }, 5000); // Durée du freeze
        setTimeout(() => {
            canUsePowerUP_freeze_team1 = true;
            console.log("Freeze power-up rechargé pour l'équipe 1");
        }, 15000); // Cooldown du power-up
    }
    return isfreeze_team1;
}
export function activateFreezeTeam2() {
    if (nb_powerUP_freeze_Team_player1_2 > 0 && canUsePowerUP_freeze_team2) {
        nb_powerUP_freeze_Team_player1_2--;
        isfreeze_team2 = true;
        canUsePowerUP_freeze_team2 = false;
        console.log("Freeze activé pour l'équipe 2");
        setTimeout(() => {
            isfreeze_team2 = false;
            console.log("Freeze terminé pour l'équipe 2");
        }, 5000); // Durée du freeze
        setTimeout(() => {
            canUsePowerUP_freeze_team2 = true;
            console.log("Freeze power-up rechargé pour l'équipe 2");
        }, 15000); // Cooldown du power-up
    }
    return isfreeze_team2;
}
export { isfreeze_team1, isfreeze_team2 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdF9wb3dlcl91cF9mcmVlemUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wdWJsaWMvc3Jjcy9nYW1lL2dhbWVwbGF5L211bHRpcGxheWVyLzJ2Ml9nYW1lL2luaXRfcG93ZXJfdXBfZnJlZXplLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksZ0NBQWdDLEdBQUcsQ0FBQyxDQUFDO0FBQ3pDLElBQUksZ0NBQWdDLEdBQUcsQ0FBQyxDQUFDO0FBRXpDLE1BQU0sVUFBVSwrQkFBK0IsQ0FBQyxNQUFNO0lBQ3JELGdDQUFnQyxHQUFHLE1BQU0sQ0FBQztJQUMxQyxnQ0FBZ0MsR0FBRyxNQUFNLENBQUM7QUFDM0MsQ0FBQztBQUVELE1BQU0sVUFBVSxnQ0FBZ0M7SUFDNUMsZ0NBQWdDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JDLGdDQUFnQyxHQUFHLENBQUMsQ0FBQztBQUN6QyxDQUFDO0FBRUQsSUFBSSxjQUFjLEdBQUcsS0FBSyxDQUFDO0FBQzNCLElBQUksY0FBYyxHQUFHLEtBQUssQ0FBQztBQUMzQixJQUFJLDBCQUEwQixHQUFHLElBQUksQ0FBQztBQUN0QyxJQUFJLDBCQUEwQixHQUFHLElBQUksQ0FBQztBQUV0QyxNQUFNLFVBQVUsbUJBQW1CO0lBRS9CLElBQUksZ0NBQWdDLEdBQUcsQ0FBQyxJQUFJLDBCQUEwQixFQUN6RSxDQUFDO1FBQ00sZ0NBQWdDLEVBQUUsQ0FBQztRQUNuQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLDBCQUEwQixHQUFHLEtBQUssQ0FBQztRQUVuQyxPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUErQixDQUFDLENBQUM7UUFFN0MsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNaLGNBQWMsR0FBRyxLQUFLLENBQUM7WUFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQ2xELENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLGtCQUFrQjtRQUU1QixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ1osMEJBQTBCLEdBQUcsSUFBSSxDQUFDO1lBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsMENBQTBDLENBQUMsQ0FBQztRQUM1RCxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyx1QkFBdUI7SUFDdEMsQ0FBQztJQUNELE9BQU8sY0FBYyxDQUFDO0FBQzFCLENBQUM7QUFFRCxNQUFNLFVBQVUsbUJBQW1CO0lBRS9CLElBQUksZ0NBQWdDLEdBQUcsQ0FBQyxJQUFJLDBCQUEwQixFQUN6RSxDQUFDO1FBQ00sZ0NBQWdDLEVBQUUsQ0FBQztRQUNuQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLDBCQUEwQixHQUFHLEtBQUssQ0FBQztRQUVuQyxPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUErQixDQUFDLENBQUM7UUFFN0MsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNaLGNBQWMsR0FBRyxLQUFLLENBQUM7WUFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQ2xELENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLGtCQUFrQjtRQUU1QixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ1osMEJBQTBCLEdBQUcsSUFBSSxDQUFDO1lBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsMENBQTBDLENBQUMsQ0FBQztRQUM1RCxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyx1QkFBdUI7SUFDdEMsQ0FBQztJQUNELE9BQU8sY0FBYyxDQUFDO0FBQzFCLENBQUM7QUFFRCxPQUFPLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsibGV0IG5iX3Bvd2VyVVBfZnJlZXplX1RlYW1fcGxheWVyMV8yID0gMDtcbmxldCBuYl9wb3dlclVQX2ZyZWV6ZV9UZWFtX3BsYXllcjNfNCA9IDA7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0X3Bvd2VyVVBfZnJlZXplX1RlYW1fcGxheWVyKG51bWJlcikge1xuXHRuYl9wb3dlclVQX2ZyZWV6ZV9UZWFtX3BsYXllcjFfMiA9IG51bWJlcjtcblx0bmJfcG93ZXJVUF9mcmVlemVfVGVhbV9wbGF5ZXIzXzQgPSBudW1iZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNldF9wb3dlclVQX2ZyZWV6ZV9UZWFtX3BsYXllcigpIHtcbiAgICBuYl9wb3dlclVQX2ZyZWV6ZV9UZWFtX3BsYXllcjFfMiA9IDA7XG4gICAgbmJfcG93ZXJVUF9mcmVlemVfVGVhbV9wbGF5ZXIzXzQgPSAwO1xufVxuXG5sZXQgaXNmcmVlemVfdGVhbTEgPSBmYWxzZTtcbmxldCBpc2ZyZWV6ZV90ZWFtMiA9IGZhbHNlO1xubGV0IGNhblVzZVBvd2VyVVBfZnJlZXplX3RlYW0xID0gdHJ1ZTtcbmxldCBjYW5Vc2VQb3dlclVQX2ZyZWV6ZV90ZWFtMiA9IHRydWU7XG5cbmV4cG9ydCBmdW5jdGlvbiBhY3RpdmF0ZUZyZWV6ZVRlYW0xKClcbntcbiAgICBpZiAobmJfcG93ZXJVUF9mcmVlemVfVGVhbV9wbGF5ZXIzXzQgPiAwICYmIGNhblVzZVBvd2VyVVBfZnJlZXplX3RlYW0xKVxuXHR7XG4gICAgICAgIG5iX3Bvd2VyVVBfZnJlZXplX1RlYW1fcGxheWVyM180LS07XG4gICAgICAgIGlzZnJlZXplX3RlYW0xID0gdHJ1ZTtcbiAgICAgICAgY2FuVXNlUG93ZXJVUF9mcmVlemVfdGVhbTEgPSBmYWxzZTtcblxuICAgICAgICBjb25zb2xlLmxvZyhcIkZyZWV6ZSBhY3RpdsOpIHBvdXIgbCfDqXF1aXBlIDFcIik7XG5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBpc2ZyZWV6ZV90ZWFtMSA9IGZhbHNlO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJGcmVlemUgdGVybWluw6kgcG91ciBsJ8OpcXVpcGUgMVwiKTtcbiAgICAgICAgfSwgNTAwMCk7IC8vIER1csOpZSBkdSBmcmVlemVcblxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGNhblVzZVBvd2VyVVBfZnJlZXplX3RlYW0xID0gdHJ1ZTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRnJlZXplIHBvd2VyLXVwIHJlY2hhcmfDqSBwb3VyIGwnw6lxdWlwZSAxXCIpO1xuICAgICAgICB9LCAxNTAwMCk7IC8vIENvb2xkb3duIGR1IHBvd2VyLXVwXG4gICAgfVxuICAgIHJldHVybiBpc2ZyZWV6ZV90ZWFtMTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFjdGl2YXRlRnJlZXplVGVhbTIoKVxue1xuICAgIGlmIChuYl9wb3dlclVQX2ZyZWV6ZV9UZWFtX3BsYXllcjFfMiA+IDAgJiYgY2FuVXNlUG93ZXJVUF9mcmVlemVfdGVhbTIpXG5cdHtcbiAgICAgICAgbmJfcG93ZXJVUF9mcmVlemVfVGVhbV9wbGF5ZXIxXzItLTtcbiAgICAgICAgaXNmcmVlemVfdGVhbTIgPSB0cnVlO1xuICAgICAgICBjYW5Vc2VQb3dlclVQX2ZyZWV6ZV90ZWFtMiA9IGZhbHNlO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKFwiRnJlZXplIGFjdGl2w6kgcG91ciBsJ8OpcXVpcGUgMlwiKTtcblxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGlzZnJlZXplX3RlYW0yID0gZmFsc2U7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkZyZWV6ZSB0ZXJtaW7DqSBwb3VyIGwnw6lxdWlwZSAyXCIpO1xuICAgICAgICB9LCA1MDAwKTsgLy8gRHVyw6llIGR1IGZyZWV6ZVxuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgY2FuVXNlUG93ZXJVUF9mcmVlemVfdGVhbTIgPSB0cnVlO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJGcmVlemUgcG93ZXItdXAgcmVjaGFyZ8OpIHBvdXIgbCfDqXF1aXBlIDJcIik7XG4gICAgICAgIH0sIDE1MDAwKTsgLy8gQ29vbGRvd24gZHUgcG93ZXItdXBcbiAgICB9XG4gICAgcmV0dXJuIGlzZnJlZXplX3RlYW0yO1xufVxuXG5leHBvcnQgeyBpc2ZyZWV6ZV90ZWFtMSwgaXNmcmVlemVfdGVhbTIgfTtcbiJdfQ==