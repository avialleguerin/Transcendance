import { currentSkinPlayer1_multi, currentSkinPlayer2_multi, currentSkinPlayer3_multi, currentSkinPlayer4_multi } from "./init_skin_perso_multi.js";
import { getIsTeam1Win, getIsTeam2Win } from "../score.js";
let currentSkinTeamPlayerFirst_multi_1 = 0;
let currentSkinTeamPlayerFirst_multi_2 = 0;
let currentSkinTeamPlayerSecond_multi_1 = 0;
let currentSkinTeamPlayerSecond_multi_2 = 0;
let defaultSkinPlayerFirst_multi = 0;
let defaultSkinPlayerSecond_multi = 0;
const skinPaths = [
    { name: "player_skin_1", path: "/srcs/game/assets/player_skin/", file: "player_blanc.glb" },
    { name: "player_skin_2", path: "/srcs/game/assets/player_skin/", file: "player_bleuv2.glb" },
    { name: "player_skin_3", path: "/srcs/game/assets/player_skin/", file: "player_rougev2.glb" },
    { name: "player_skin_4", path: "/srcs/game/assets/player_skin/", file: "player_vert.glb" }
];
let player1_podium_multi = [];
let player2_podium_multi = [];
let player3_podium_multi = [];
let player4_podium_multi = [];
function loadSkin(skin, scene, x, y, z, scaleX, scaleY, scaleZ) {
    return new Promise((resolve, reject) => {
        BABYLON.SceneLoader.ImportMesh("", skin.path, skin.file, scene, (meshes) => {
            const rootMesh = meshes.find(mesh => mesh.name === "__root__");
            if (rootMesh) {
                rootMesh.position = new BABYLON.Vector3(x, y, z);
                rootMesh.scaling = new BABYLON.Vector3(scaleX, scaleY, scaleZ);
                rootMesh.rotation = new BABYLON.Vector3(0, Math.PI / 2, 0);
                rootMesh.metadata = { isPlayer_skin_podium: true };
                rootMesh.setEnabled(false);
                resolve(rootMesh);
            }
            else {
                reject(`Erreur lors du chargement de ${skin.name}`);
            }
        });
    });
}
function loadSkinsForPlayer(skinPaths, scene, playerSkins, offsetX, offsetY, offsetZ, scaleX, scaleY, scaleZ) {
    let loadPromises = skinPaths.map((skin) => loadSkin(skin, scene, offsetX, offsetY, offsetZ, scaleX, scaleY, scaleZ));
    Promise.all(loadPromises)
        .then((meshes) => {
        meshes.forEach((mesh, index) => {
            mesh.position = new BABYLON.Vector3(offsetX, offsetY, offsetZ);
            playerSkins.push(mesh);
            console.log(`Skin ${skinPaths[index].name} chargé avec succès pour l'index ${index}`);
        });
    })
        .catch((error) => {
        console.error(error);
    });
}
export function init_skins_perso_player1_multi_podium(scene) {
    loadSkinsForPlayer(skinPaths, scene, player1_podium_multi, -62, 304.5, -57, 4, 4, 4);
}
export function init_skins_perso_player2_multi_podium(scene) {
    loadSkinsForPlayer(skinPaths, scene, player2_podium_multi, -65, 304.5, -53, 4, 4, 4);
}
export function init_skins_perso_player3_multi_podium(scene) {
    loadSkinsForPlayer(skinPaths, scene, player3_podium_multi, -62, 303, -49, 4, 4, 4);
}
export function init_skins_perso_player4_multi_podium(scene) {
    loadSkinsForPlayer(skinPaths, scene, player4_podium_multi, -65, 303, -45, 4, 4, 4);
}
export function enable_skin_multi_podium() {
    let is_team1_win = getIsTeam1Win();
    let is_team2_win = getIsTeam2Win();
    if (player1_podium_multi.length === 0)
        return;
    if (player2_podium_multi.length === 0)
        return;
    if (player3_podium_multi.length === 0)
        return;
    if (player4_podium_multi.length === 0)
        return;
    if (is_team1_win && !is_team2_win) {
        currentSkinTeamPlayerFirst_multi_1 = currentSkinPlayer1_multi;
        currentSkinTeamPlayerFirst_multi_2 = currentSkinPlayer2_multi;
        currentSkinTeamPlayerSecond_multi_1 = currentSkinPlayer3_multi;
        currentSkinTeamPlayerSecond_multi_2 = currentSkinPlayer4_multi;
        player1_podium_multi.forEach(skin => skin.setEnabled(false));
        player1_podium_multi[currentSkinTeamPlayerFirst_multi_1].setEnabled(true);
        player2_podium_multi.forEach(skin => skin.setEnabled(false));
        player2_podium_multi[currentSkinTeamPlayerFirst_multi_2].setEnabled(true);
        player3_podium_multi.forEach(skin => skin.setEnabled(false));
        player3_podium_multi[currentSkinTeamPlayerSecond_multi_1].setEnabled(true);
        player4_podium_multi.forEach(skin => skin.setEnabled(false));
        player4_podium_multi[currentSkinTeamPlayerSecond_multi_2].setEnabled(true);
    }
    else if (is_team2_win && !is_team1_win) {
        currentSkinTeamPlayerFirst_multi_1 = currentSkinPlayer3_multi;
        currentSkinTeamPlayerFirst_multi_2 = currentSkinPlayer4_multi;
        currentSkinTeamPlayerSecond_multi_1 = currentSkinPlayer1_multi;
        currentSkinTeamPlayerSecond_multi_2 = currentSkinPlayer2_multi;
        player1_podium_multi.forEach(skin => skin.setEnabled(false));
        player1_podium_multi[currentSkinTeamPlayerFirst_multi_1].setEnabled(true);
        player2_podium_multi.forEach(skin => skin.setEnabled(false));
        player2_podium_multi[currentSkinTeamPlayerFirst_multi_2].setEnabled(true);
        player3_podium_multi.forEach(skin => skin.setEnabled(false));
        player3_podium_multi[currentSkinTeamPlayerSecond_multi_1].setEnabled(true);
        player4_podium_multi.forEach(skin => skin.setEnabled(false));
        player4_podium_multi[currentSkinTeamPlayerSecond_multi_2].setEnabled(true);
    }
}
export function disable_skin_multi_podium() {
    if (player1_podium_multi.length === 0)
        return;
    if (player2_podium_multi.length === 0)
        return;
    player1_podium_multi[currentSkinTeamPlayerFirst_multi_1].setEnabled(false);
    currentSkinTeamPlayerFirst_multi_1 = defaultSkinPlayerFirst_multi;
    player2_podium_multi[currentSkinTeamPlayerFirst_multi_2].setEnabled(false);
    currentSkinTeamPlayerFirst_multi_2 = defaultSkinPlayerSecond_multi;
    player3_podium_multi[currentSkinTeamPlayerSecond_multi_1].setEnabled(false);
    currentSkinTeamPlayerSecond_multi_1 = defaultSkinPlayerFirst_multi;
    player4_podium_multi[currentSkinTeamPlayerSecond_multi_2].setEnabled(false);
    currentSkinTeamPlayerSecond_multi_2 = defaultSkinPlayerSecond_multi;
}
export { currentSkinTeamPlayerFirst_multi_1, currentSkinTeamPlayerFirst_multi_2, currentSkinTeamPlayerSecond_multi_1, currentSkinTeamPlayerSecond_multi_2, player1_podium_multi, player2_podium_multi, player3_podium_multi, player4_podium_multi };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdF90ZWFtUGxheWVyX3BvZGl1bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3B1YmxpYy9zcmNzL2dhbWUvZ2FtZXBsYXkvbXVsdGlwbGF5ZXIvaW5pdF90ZWFtUGxheWVyX3BvZGl1bS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsd0JBQXdCLEVBQUUsd0JBQXdCLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwSixPQUFPLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUUzRCxJQUFJLGtDQUFrQyxHQUFHLENBQUMsQ0FBQztBQUMzQyxJQUFJLGtDQUFrQyxHQUFHLENBQUMsQ0FBQztBQUMzQyxJQUFJLG1DQUFtQyxHQUFHLENBQUMsQ0FBQztBQUM1QyxJQUFJLG1DQUFtQyxHQUFHLENBQUMsQ0FBQztBQUU1QyxJQUFJLDRCQUE0QixHQUFHLENBQUMsQ0FBQztBQUNyQyxJQUFJLDZCQUE2QixHQUFHLENBQUMsQ0FBQztBQUV0QyxNQUFNLFNBQVMsR0FBRztJQUNkLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLGtCQUFrQixFQUFFO0lBQzNGLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLG1CQUFtQixFQUFFO0lBQzVGLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLG9CQUFvQixFQUFFO0lBQzdGLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLGlCQUFpQixFQUFFO0NBQzdGLENBQUM7QUFFRixJQUFJLG9CQUFvQixHQUFHLEVBQUUsQ0FBQztBQUM5QixJQUFJLG9CQUFvQixHQUFHLEVBQUUs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Q0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0Usa0NBQWtDLEdBQUcsNkJBQTZCLENBQUM7SUFFbkUsb0JBQW9CLENBQUMsbUNBQW1DLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUUsbUNBQW1DLEdBQUcsNEJBQTRCLENBQUM7SUFFbkUsb0JBQW9CLENBQUMsbUNBQW1DLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUUsbUNBQW1DLEdBQUcsNkJBQTZCLENBQUM7QUFDckUsQ0FBQztBQUVELE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxrQ0FBa0MsRUFBRSxtQ0FBbUMsRUFBRSxtQ0FBbUMsRUFBRSxvQkFBb0IsRUFBRSxvQkFBb0IsRUFBRSxvQkFBb0IsRUFBRSxvQkFBb0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3VycmVudFNraW5QbGF5ZXIxX211bHRpLCBjdXJyZW50U2tpblBsYXllcjJfbXVsdGksIGN1cnJlbnRTa2luUGxheWVyM19tdWx0aSwgY3VycmVudFNraW5QbGF5ZXI0X211bHRpIH0gZnJvbSBcIi4vaW5pdF9za2luX3BlcnNvX211bHRpLmpzXCI7XG5pbXBvcnQgeyBnZXRJc1RlYW0xV2luLCBnZXRJc1RlYW0yV2luIH0gZnJvbSBcIi4uL3Njb3JlLmpzXCI7XG5cbmxldCBjdXJyZW50U2tpblRlYW1QbGF5ZXJGaXJzdF9tdWx0aV8xID0gMDtcbmxldCBjdXJyZW50U2tpblRlYW1QbGF5ZXJGaXJzdF9tdWx0aV8yID0gMDtcbmxldCBjdXJyZW50U2tpblRlYW1QbGF5ZXJTZWNvbmRfbXVsdGlfMSA9IDA7XG5sZXQgY3VycmVudFNraW5UZWFtUGxheWVyU2Vjb25kX211bHRpXzIgPSAwO1xuXG5sZXQgZGVmYXVsdFNraW5QbGF5ZXJGaXJzdF9tdWx0aSA9IDA7XG5sZXQgZGVmYXVsdFNraW5QbGF5ZXJTZWNvbmRfbXVsdGkgPSAwO1xuXG5jb25zdCBza2luUGF0aHMgPSBbXG4gICAgeyBuYW1lOiBcInBsYXllcl9za2luXzFcIiwgcGF0aDogXCIvc3Jjcy9nYW1lL2Fzc2V0cy9wbGF5ZXJfc2tpbi9cIiwgZmlsZTogXCJwbGF5ZXJfYmxhbmMuZ2xiXCIgfSxcbiAgICB7IG5hbWU6IFwicGxheWVyX3NraW5fMlwiLCBwYXRoOiBcIi9zcmNzL2dhbWUvYXNzZXRzL3BsYXllcl9za2luL1wiLCBmaWxlOiBcInBsYXllcl9ibGV1djIuZ2xiXCIgfSxcbiAgICB7IG5hbWU6IFwicGxheWVyX3NraW5fM1wiLCBwYXRoOiBcIi9zcmNzL2dhbWUvYXNzZXRzL3BsYXllcl9za2luL1wiLCBmaWxlOiBcInBsYXllcl9yb3VnZXYyLmdsYlwiIH0sXG4gICAgeyBuYW1lOiBcInBsYXllcl9za2luXzRcIiwgcGF0aDogXCIvc3Jjcy9nYW1lL2Fzc2V0cy9wbGF5ZXJfc2tpbi9cIiwgZmlsZTogXCJwbGF5ZXJfdmVydC5nbGJcIiB9XG5dO1xuXG5sZXQgcGxheWVyMV9wb2RpdW1fbXVsdGkgPSBbXTtcbmxldCBwbGF5ZXIyX3BvZGl1bV9tdWx0aSA9IFtdO1xubGV0IHBsYXllcjNfcG9kaXVtX211bHRpID0gW107XG5sZXQgcGxheWVyNF9wb2RpdW1fbXVsdGkgPSBbXTtcblxuXG5mdW5jdGlvbiBsb2FkU2tpbihza2luLCBzY2VuZSwgeCwgeSwgeiwgc2NhbGVYLCBzY2FsZVksIHNjYWxlWikge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIEJBQllMT04uU2NlbmVMb2FkZXIuSW1wb3J0TWVzaChcIlwiLCBza2luLnBhdGgsIHNraW4uZmlsZSwgc2NlbmUsIChtZXNoZXMpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJvb3RNZXNoID0gbWVzaGVzLmZpbmQobWVzaCA9PiBtZXNoLm5hbWUgPT09IFwiX19yb290X19cIik7XG4gICAgICAgICAgICBpZiAocm9vdE1lc2gpIHtcbiAgICAgICAgICAgICAgICByb290TWVzaC5wb3NpdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoeCwgeSwgeik7XG4gICAgICAgICAgICAgICAgcm9vdE1lc2guc2NhbGluZyA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoc2NhbGVYLCBzY2FsZVksIHNjYWxlWik7XG4gICAgICAgICAgICAgICAgcm9vdE1lc2gucm90YXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKDAsIE1hdGguUEkvMiwgMCk7XG4gICAgICAgICAgICAgICAgcm9vdE1lc2gubWV0YWRhdGEgPSB7IGlzUGxheWVyX3NraW5fcG9kaXVtOiB0cnVlIH07XG4gICAgICAgICAgICAgICAgcm9vdE1lc2guc2V0RW5hYmxlZChmYWxzZSk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShyb290TWVzaCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlamVjdChgRXJyZXVyIGxvcnMgZHUgY2hhcmdlbWVudCBkZSAke3NraW4ubmFtZX1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5cblxuZnVuY3Rpb24gbG9hZFNraW5zRm9yUGxheWVyKHNraW5QYXRocywgc2NlbmUsIHBsYXllclNraW5zLCBvZmZzZXRYLCBvZmZzZXRZLCBvZmZzZXRaLCBzY2FsZVgsIHNjYWxlWSwgc2NhbGVaKVxue1xuICAgIGxldCBsb2FkUHJvbWlzZXMgPSBza2luUGF0aHMubWFwKChza2luKSA9PiBsb2FkU2tpbihza2luLCBzY2VuZSwgb2Zmc2V0WCwgb2Zmc2V0WSwgb2Zmc2V0Wiwgc2NhbGVYLCBzY2FsZVksIHNjYWxlWikpO1xuXG4gICAgUHJvbWlzZS5hbGwobG9hZFByb21pc2VzKVxuICAgICAgICAudGhlbigobWVzaGVzKSA9PiB7XG4gICAgICAgICAgICBtZXNoZXMuZm9yRWFjaCgobWVzaCwgaW5kZXgpID0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbWVzaC5wb3NpdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMob2Zmc2V0WCwgb2Zmc2V0WSwgb2Zmc2V0Wik7XG4gICAgICAgICAgICAgICAgcGxheWVyU2tpbnMucHVzaChtZXNoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgU2tpbiAke3NraW5QYXRoc1tpbmRleF0ubmFtZX0gY2hhcmfDqSBhdmVjIHN1Y2PDqHMgcG91ciBsJ2luZGV4ICR7aW5kZXh9YCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdF9za2luc19wZXJzb19wbGF5ZXIxX211bHRpX3BvZGl1bShzY2VuZSkge1xuICAgIGxvYWRTa2luc0ZvclBsYXllcihza2luUGF0aHMsIHNjZW5lLCBwbGF5ZXIxX3BvZGl1bV9tdWx0aSwgLTYyLCAzMDQuNSwgLTU3LCA0LCA0LCA0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRfc2tpbnNfcGVyc29fcGxheWVyMl9tdWx0aV9wb2RpdW0oc2NlbmUpIHtcbiAgICBsb2FkU2tpbnNGb3JQbGF5ZXIoc2tpblBhdGhzLCBzY2VuZSwgcGxheWVyMl9wb2RpdW1fbXVsdGksIC02NSwgMzA0LjUsIC01MywgNCwgNCwgNCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0X3NraW5zX3BlcnNvX3BsYXllcjNfbXVsdGlfcG9kaXVtKHNjZW5lKSB7XG4gICAgbG9hZFNraW5zRm9yUGxheWVyKHNraW5QYXRocywgc2NlbmUsIHBsYXllcjNfcG9kaXVtX211bHRpLCAtNjIsIDMwMywgLTQ5LCA0LCA0LCA0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRfc2tpbnNfcGVyc29fcGxheWVyNF9tdWx0aV9wb2RpdW0oc2NlbmUpIHtcbiAgICBsb2FkU2tpbnNGb3JQbGF5ZXIoc2tpblBhdGhzLCBzY2VuZSwgcGxheWVyNF9wb2RpdW1fbXVsdGksIC02NSwgMzAzLCAtNDUsIDQsIDQsIDQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZW5hYmxlX3NraW5fbXVsdGlfcG9kaXVtKCkge1xuXG5cdGxldCBpc190ZWFtMV93aW4gPSBnZXRJc1RlYW0xV2luKCk7XG5cdGxldCBpc190ZWFtMl93aW4gPSBnZXRJc1RlYW0yV2luKCk7XG5cbiAgICBpZiAocGxheWVyMV9wb2RpdW1fbXVsdGkubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgaWYgKHBsYXllcjJfcG9kaXVtX211bHRpLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGlmIChwbGF5ZXIzX3BvZGl1bV9tdWx0aS5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICBpZiAocGxheWVyNF9wb2RpdW1fbXVsdGkubGVuZ3RoID09PSAwKSByZXR1cm47XG5cblx0aWYgKGlzX3RlYW0xX3dpbiAmJiAhaXNfdGVhbTJfd2luKSB7XG5cdFx0Y3VycmVudFNraW5UZWFtUGxheWVyRmlyc3RfbXVsdGlfMSA9IGN1cnJlbnRTa2luUGxheWVyMV9tdWx0aTtcblx0XHRjdXJyZW50U2tpblRlYW1QbGF5ZXJGaXJzdF9tdWx0aV8yID0gY3VycmVudFNraW5QbGF5ZXIyX211bHRpO1xuXHRcdGN1cnJlbnRTa2luVGVhbVBsYXllclNlY29uZF9tdWx0aV8xID0gY3VycmVudFNraW5QbGF5ZXIzX211bHRpO1xuXHRcdGN1cnJlbnRTa2luVGVhbVBsYXllclNlY29uZF9tdWx0aV8yID0gY3VycmVudFNraW5QbGF5ZXI0X211bHRpO1xuXG5cdFx0cGxheWVyMV9wb2RpdW1fbXVsdGkuZm9yRWFjaChza2luID0+IHNraW4uc2V0RW5hYmxlZChmYWxzZSkpO1xuXHRcdHBsYXllcjFfcG9kaXVtX211bHRpW2N1cnJlbnRTa2luVGVhbVBsYXllckZpcnN0X211bHRpXzFdLnNldEVuYWJsZWQodHJ1ZSk7XG5cblx0XHRwbGF5ZXIyX3BvZGl1bV9tdWx0aS5mb3JFYWNoKHNraW4gPT4gc2tpbi5zZXRFbmFibGVkKGZhbHNlKSk7XG5cdFx0cGxheWVyMl9wb2RpdW1fbXVsdGlbY3VycmVudFNraW5UZWFtUGxheWVyRmlyc3RfbXVsdGlfMl0uc2V0RW5hYmxlZCh0cnVlKTtcblxuXHRcdHBsYXllcjNfcG9kaXVtX211bHRpLmZvckVhY2goc2tpbiA9PiBza2luLnNldEVuYWJsZWQoZmFsc2UpKTtcblx0XHRwbGF5ZXIzX3BvZGl1bV9tdWx0aVtjdXJyZW50U2tpblRlYW1QbGF5ZXJTZWNvbmRfbXVsdGlfMV0uc2V0RW5hYmxlZCh0cnVlKTtcblxuXHRcdHBsYXllcjRfcG9kaXVtX211bHRpLmZvckVhY2goc2tpbiA9PiBza2luLnNldEVuYWJsZWQoZmFsc2UpKTtcblx0XHRwbGF5ZXI0X3BvZGl1bV9tdWx0aVtjdXJyZW50U2tpblRlYW1QbGF5ZXJTZWNvbmRfbXVsdGlfMl0uc2V0RW5hYmxlZCh0cnVlKTtcblx0fVxuXG5cdGVsc2UgaWYgKGlzX3RlYW0yX3dpbiAmJiAhaXNfdGVhbTFfd2luKSB7XG5cdFx0Y3VycmVudFNraW5UZWFtUGxheWVyRmlyc3RfbXVsdGlfMSA9IGN1cnJlbnRTa2luUGxheWVyM19tdWx0aTtcblx0XHRjdXJyZW50U2tpblRlYW1QbGF5ZXJGaXJzdF9tdWx0aV8yID0gY3VycmVudFNraW5QbGF5ZXI0X211bHRpO1xuXHRcdGN1cnJlbnRTa2luVGVhbVBsYXllclNlY29uZF9tdWx0aV8xID0gY3VycmVudFNraW5QbGF5ZXIxX211bHRpO1xuXHRcdGN1cnJlbnRTa2luVGVhbVBsYXllclNlY29uZF9tdWx0aV8yID0gY3VycmVudFNraW5QbGF5ZXIyX211bHRpO1xuXG5cdFx0cGxheWVyMV9wb2RpdW1fbXVsdGkuZm9yRWFjaChza2luID0+IHNraW4uc2V0RW5hYmxlZChmYWxzZSkpO1xuXHRcdHBsYXllcjFfcG9kaXVtX211bHRpW2N1cnJlbnRTa2luVGVhbVBsYXllckZpcnN0X211bHRpXzFdLnNldEVuYWJsZWQodHJ1ZSk7XG5cblx0XHRwbGF5ZXIyX3BvZGl1bV9tdWx0aS5mb3JFYWNoKHNraW4gPT4gc2tpbi5zZXRFbmFibGVkKGZhbHNlKSk7XG5cdFx0cGxheWVyMl9wb2RpdW1fbXVsdGlbY3VycmVudFNraW5UZWFtUGxheWVyRmlyc3RfbXVsdGlfMl0uc2V0RW5hYmxlZCh0cnVlKTtcblxuXHRcdHBsYXllcjNfcG9kaXVtX211bHRpLmZvckVhY2goc2tpbiA9PiBza2luLnNldEVuYWJsZWQoZmFsc2UpKTtcblx0XHRwbGF5ZXIzX3BvZGl1bV9tdWx0aVtjdXJyZW50U2tpblRlYW1QbGF5ZXJTZWNvbmRfbXVsdGlfMV0uc2V0RW5hYmxlZCh0cnVlKTtcblxuXHRcdHBsYXllcjRfcG9kaXVtX211bHRpLmZvckVhY2goc2tpbiA9PiBza2luLnNldEVuYWJsZWQoZmFsc2UpKTtcblx0XHRwbGF5ZXI0X3BvZGl1bV9tdWx0aVtjdXJyZW50U2tpblRlYW1QbGF5ZXJTZWNvbmRfbXVsdGlfMl0uc2V0RW5hYmxlZCh0cnVlKTtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzYWJsZV9za2luX211bHRpX3BvZGl1bSgpIHtcblx0aWYgKHBsYXllcjFfcG9kaXVtX211bHRpLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXHRpZiAocGxheWVyMl9wb2RpdW1fbXVsdGkubGVuZ3RoID09PSAwKSByZXR1cm47XG5cblx0cGxheWVyMV9wb2RpdW1fbXVsdGlbY3VycmVudFNraW5UZWFtUGxheWVyRmlyc3RfbXVsdGlfMV0uc2V0RW5hYmxlZChmYWxzZSk7XG5cdGN1cnJlbnRTa2luVGVhbVBsYXllckZpcnN0X211bHRpXzEgPSBkZWZhdWx0U2tpblBsYXllckZpcnN0X211bHRpO1xuXG5cdHBsYXllcjJfcG9kaXVtX211bHRpW2N1cnJlbnRTa2luVGVhbVBsYXllckZpcnN0X211bHRpXzJdLnNldEVuYWJsZWQoZmFsc2UpO1xuXHRjdXJyZW50U2tpblRlYW1QbGF5ZXJGaXJzdF9tdWx0aV8yID0gZGVmYXVsdFNraW5QbGF5ZXJTZWNvbmRfbXVsdGk7XG5cblx0cGxheWVyM19wb2RpdW1fbXVsdGlbY3VycmVudFNraW5UZWFtUGxheWVyU2Vjb25kX211bHRpXzFdLnNldEVuYWJsZWQoZmFsc2UpO1xuXHRjdXJyZW50U2tpblRlYW1QbGF5ZXJTZWNvbmRfbXVsdGlfMSA9IGRlZmF1bHRTa2luUGxheWVyRmlyc3RfbXVsdGk7XG5cblx0cGxheWVyNF9wb2RpdW1fbXVsdGlbY3VycmVudFNraW5UZWFtUGxheWVyU2Vjb25kX211bHRpXzJdLnNldEVuYWJsZWQoZmFsc2UpO1xuXHRjdXJyZW50U2tpblRlYW1QbGF5ZXJTZWNvbmRfbXVsdGlfMiA9IGRlZmF1bHRTa2luUGxheWVyU2Vjb25kX211bHRpO1xufVxuXG5leHBvcnQgeyBjdXJyZW50U2tpblRlYW1QbGF5ZXJGaXJzdF9tdWx0aV8xLCBjdXJyZW50U2tpblRlYW1QbGF5ZXJGaXJzdF9tdWx0aV8yLCBjdXJyZW50U2tpblRlYW1QbGF5ZXJTZWNvbmRfbXVsdGlfMSwgY3VycmVudFNraW5UZWFtUGxheWVyU2Vjb25kX211bHRpXzIsIHBsYXllcjFfcG9kaXVtX211bHRpLCBwbGF5ZXIyX3BvZGl1bV9tdWx0aSwgcGxheWVyM19wb2RpdW1fbXVsdGksIHBsYXllcjRfcG9kaXVtX211bHRpIH07XG4iXX0=