####################################
# Notes
# Tous les outils doivent etre nomme en entier (exception pour vault),
#   minuscule, sans separation.
# transcendence sera toujours orthographe avec un 'e', pour la version anglaise.
# l'ordre doit etre toujours:
#   - image:
#   - extends:
#   - ports:
#   - depends_on:
#   - volumes:
#   - environnement:
#   - networks:
#       - doitetreuneliste
####################################

services:

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    restart: always
    volumes:
      - redis_data:/data

  fastify:
    container_name: fastify
    image: custom-fastify
    build:
      context: ./Backend
      dockerfile: Fastify/Dockerfile
    ports:
      - "3000:3000"
    restart: always
    environment:
      - REDIS_URL="redis://redis:6379"
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_ADDR=http://vault:8200
    depends_on:
      - redis
      - vault
    volumes:
      - ./Backend/Fastify:/app:ro
      - app_node_modules:/app/node_modules
      - vault_data:/app/vault/data
      - sqlite_data:/app/Data/db
      - uploads_data:/usr/share/nginx/uploads

  nginx:
    container_name: nginx
    build:
      context: ./Security
      dockerfile: Nginx/Dockerfile
    ports:
      - "8080:8080"           #80:80 necessite des privilege
      - "8443:443"          # HTTPS
      - "8100:8100"
      - "8300:8300"          # Typescript
      - "8400:8400"          # Typescript 2
    depends_on:
      - fastify
      - tsengine
    environment:
      - NGINX_ENVSUBST_TEMPLATE_DIR=off
    volumes:
      - ./Security/Nginx/conf.d:/etc/nginx/conf.d:ro
      - ./Security/ModSecurity:/etc/modsecurity.d:ro
      - ./Frontend/public:/usr/share/nginx/html:ro  #The Main Website
      - ./Frontend/admin:/usr/share/nginx/admin:ro  #The Admin Website
      - ./Frontend/utils:/usr/share/nginx/utils:ro  #The API Scripts
      - uploads_data:/usr/share/nginx/uploads
      # Typescript build files
      - ./Frontend/dist:/usr/share/nginx/dist:ro  # The compiled JS files
      - ./Frontend/dist2:/usr/share/nginx/dist2:ro  # The compiled JS files

  tsengine:
    image: node:20-alpine
    container_name: tsengine
    working_dir: /app
    command: >
      sh -c "npm i -g typescript && npm i &&
              mkdir -p /app/dist &&
              tsc --project /app/tsconfig.json --watch"
    volumes:
      - ./Frontend/public:/app/public:ro
      - ./Frontend/public2:/app/public2:ro
      - ./Frontend/package.json:/app/package.json:ro
      - ./Frontend/tsconfig.json:/app/tsconfig.json:ro
      - ts_node_modules:/app/node_modules
      - ./Frontend/dist:/app/dist
      - ./Frontend/dist2:/app/dist2
    restart: unless-stopped

  vault:
    image: custom-vault
    container_name: vault
    restart: always
    build:
      context: ./Security/Vault
      dockerfile: Dockerfile
    ports:
      - "8200:8200"
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_DEV_ROOT_TOKEN_ID=root
    volumes:
      - vault_data:/vault/data
      - ./Security/Vault/scripts:/vault/scripts:ro
    cap_add:
      - IPC_LOCK
    # entrypoint: "vault server -dev -dev-listen-address=0.0.0.0:8200"

# networks:
#   transcendence-network:
#      driver: bridge

volumes:
  redis_data:
    driver: local
  sqlite_data:
    driver: local
  vault_data:
    driver: local
  uploads_data:
    driver: local
  app_node_modules:
    driver: local
  ts_node_modules:
    driver: local