##To install venv :
python3.9 -m venv .env
source .envPy/bin/activate (ensuite pour sourcer)
which python (pour verifier)

##installer django:
pip install --upgrade pip (maj)
pip install django==3.1.6
python -m django --version (verifier)

'python (pour lancer un interpreteur pyhton)
>> import django
>> exit()'


##Pour Geler notre environnement et sauvegarder nos configurations :
pip freeze > requirements.txt
Puis pour le reutiliser :
pip uninstall django
pip install -r requirements.txt
si la commande django-admin ne fonctionne pas cest qu'il faut sourcer (etre en mode source voir README.md ou voir le tuto)

##Utiliser Django:
django-admin permet de tout faire
django-admin startproject transcendence
django-admin --help


##Pour lancer le serveur:
python manage.py migrate
python manage.py runserver


PostgreSQL:
install psycopg2

--- Nouvelle version de transcendance (Fastify) ---
pour lancer docker-compose sans quil soit installer:
docker run --rm -v $PWD:/app -w /app docker/compose:latest up //finalement non pas ca trop complexe.

plutot utikliser "docker compose" sans tirer qui est un plugin de docker
docker compose up --build
docker compose up --build -d //lance en arriere plan
docker compose down

pour refresh (watch) avec docker il faut Nodemon:
npm install --save-dev nodemon
puis le config dnas pans package.json


=== Afficher / ne pas afficher les logs ===
# Nginx
MiniBackend/Nginx/default.conf => ajouter la ligne : `access_log /dev/null;`
# Fastify
Mettre False ou True : `export const fastify = Fastify({ logger: false })` 
# SQLite
utiliser : `export const db = new Database('database.sqlite', { verbose: console.log });`
l'option verbose permet de rediriger dans la console les logs.






